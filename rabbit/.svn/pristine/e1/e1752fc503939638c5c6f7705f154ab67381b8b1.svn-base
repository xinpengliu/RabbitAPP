package com.rabbit.app;

import android.content.res.Configuration;
import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentManager;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;
import android.widget.Toast;

import com.baidu.mapapi.map.BaiduMapOptions;
import com.baidu.mapapi.map.MapStatus;
import com.baidu.mapapi.map.SupportMapFragment;
import com.rabbit.app.view.SlideMenu;

public class MainActivity extends FragmentActivity implements OnClickListener {

	private SlideMenu slideMenu;
	
	SupportMapFragment map;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
	
		requestWindowFeature(Window.FEATURE_NO_TITLE);
	    int flags = WindowManager.LayoutParams.FLAG_FULLSCREEN;
	    this.getWindow().setFlags(flags, flags);
		  
		setContentView(R.layout.activity_main);

		slideMenu = (SlideMenu) findViewById(R.id.slidemenu);
		findViewById(R.id.ib_back).setOnClickListener(this);
		
		
		MapStatus ms = new MapStatus.Builder().overlook(-20).zoom(15).build();
		BaiduMapOptions bo = new BaiduMapOptions().mapStatus(ms)
				.compassEnabled(false).zoomControlsEnabled(false);
		map = SupportMapFragment.newInstance(bo);
		FragmentManager manager = getSupportFragmentManager();
		manager.beginTransaction().add(R.id.map, map, "map_fragment").commit();

	}

	
	@Override
	public void onClick(View v) {

		boolean isShowMenu = slideMenu.isShowMenu();

		if (isShowMenu) {// Òþ²Ø²Ëµ¥
			slideMenu.hideMenu();

		} else// ÏÔÊ¾²Ëµ¥
		{
			slideMenu.showMenu();
		}

	}

	public void tabClick(View v) {

		TextView tv = (TextView) v;

		Toast.makeText(this, tv.getText(), 0).show();

	}

	@Override
	protected void onRestoreInstanceState(Bundle savedInstanceState) {
		super.onRestoreInstanceState(savedInstanceState);
	}

	@Override
	protected void onRestart() {
		super.onRestart();
	}

	@Override
	public void onStart() {
		super.onStart();
	}

	@Override
	public void onResume() {
		super.onResume();
	}

	@Override
	public void onSaveInstanceState(Bundle outState) {
		super.onSaveInstanceState(outState);
	}

	@Override
	public void onPause() {
		super.onPause();
	}

	@Override
	public void onStop() {
		super.onStop();
	}

	@Override
	public void onDestroy() {
		super.onDestroy();
	}

	@Override
	public void onConfigurationChanged(Configuration newConfig) {
		super.onConfigurationChanged(newConfig);
	}


}
